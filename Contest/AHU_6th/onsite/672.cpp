#include <iostream>
#include <cstdio>
#include <algorithm>
#include <map>
#include <cstring>
using namespace std;
const int N = 205;
int n , a[N] , idx , dp[1 << 20] , b[N];
map <int , int> m;
int dfs (int k) {
????int &ret = dp[k];
????if (ret != -1) return ret;
????ret = 0;
????for (int i = 1 ; i < idx ; i ++) {
????????int cur = 0;
????????for (int j = 0 ; j < idx ; j ++) {
????????????if ((1 << j) & k && b[j] % b[i] == 0) {
????????????????cur |= 1 << m[b[j] / b[i]];
????????????}
????????????else if ((1 << j) & k) {
????????????????cur |= 1 << j;
????????????}
????????}
????????if (cur != k && cur && !dfs (cur)) ret = 1;
????}
????return ret;
}
int main () {
????while (cin >> n) {
????????memset (dp , -1 , sizeof (dp));
????????dp[1] = 0;
????????for (int i = 0 ; i < n ; i ++) {
????????????cin >> a[i];
????????}
????????m.clear ();idx = 0;
????????for (int i = 1 , k = *max_element (a , a + n) ; i * i <= k ; i ++) {
????????????if (k % i == 0) {
????????????????b[idx] = i;
????????????????m[i] = idx ++;
????????????????if (k / i != i) b[idx] = k / i , m[k / i] = idx ++; 
????????????}
????????}
????????int cur = 0;
????????for (int i = 0 ; i < n ; i ++) {
????????????cur |= 1 << m[a[i]];
????????}
????????int ans = dfs (cur);
????????cout << (ans ? "Poor Tyrion." : "The Lannister always pays his debts.") << endl;
????}
????return 0;
}